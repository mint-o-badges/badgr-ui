{
  "name": "badgr-ui",
  "version": "0.0.0",
  "description": "Badgr UI",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "start-intellij": "ng serve --host 0.0.0.0 --disable-host-check --aot 2>&1 | perl -e '$|++; while (<>) { s/((ERROR|WARNING) in\\s*)(.*)/$1\\n$3/g; print $_; }'",
    "build:widgets": "webpack --config widgets-webpack.config.ts",
    "verify-prod-environment": "[[ -f src/environments/environment.prod.ts ]] || (echo '\\033[0;31m!!!'; echo '\\033[0;31m!!! No envrionment.prod.ts file present. Copy environment.prod.ts.example and modify it for your environment or consult the README'; echo '\\033[0;31m!!!'; echo; exit -1)",
    "build:app": "ng build --output-hashing=all --aot --configuration production && html-minifier -c html-minifier.config.json -o dist/index.html < dist/index.html",
    "build:staging": "ng build --output-hashing=all --aot --configuration staging && html-minifier -c html-minifier.config.json -o dist/index.html < dist/index.html",
    "build:develop": "ng build --output-hashing=all --aot --configuration develop && html-minifier -c html-minifier.config.json -o dist/index.html < dist/index.html",
    "build": "npm run build:app && npm run build:widgets",
    "test": "ng test --source-map=false",
    "test-intellij": "ng test 2>&1 | perl -e '$|++; while (<>) { s/((ERROR|WARNING) in\\s*)(.*)/$1\\n$3/g; print $_; }'",
    "test-headless": "ng test --source-map=false --watch=false --browsers=ChromeHeadless",
    "lint": "tslint src/**/*.ts",
    "e2e": "ng e2e",
    "postversion": "git push && git push --tags",
    "gts-check": "gts check",
    "gts-clean": "gts clean",
    "gts-fix": "gts fix",
    "prepare": "husky"
  },
  "private": true,
  "license": "ISC",
  "dependencies": {
    "@angular/animations": "^18.0.1",
    "@angular/cdk": "^18.0.1",
    "@angular/cli": "^18.0.2",
    "@angular/common": "^18.0.1",
    "@angular/compiler": "^18.0.1",
    "@angular/core": "^18.0.1",
    "@angular/forms": "^18.0.1",
    "@angular/platform-browser": "^18.0.1",
    "@angular/platform-browser-dynamic": "^18.0.1",
    "@angular/router": "^18.0.1",
    "@angularclass/request-idle-callback": "1.0.7",
    "@concentricsky/badgr-style": "^20.1.2",
    "@ng-icons/core": "^25.1.0",
    "@ng-icons/lucide": "^26.3.0",
    "@ngx-translate/core": "^15.0.0",
    "@ngx-translate/http-loader": "^8.0.0",
    "@spartan-ng/ui-accordion-brain": "0.0.1-alpha.350",
    "@spartan-ng/ui-checkbox-brain": "0.0.1-alpha.350",
    "@spartan-ng/ui-command-brain": "0.0.1-alpha.350",
    "@spartan-ng/ui-core": "0.0.1-alpha.350",
    "@spartan-ng/ui-label-brain": "0.0.1-alpha.350",
    "@spartan-ng/ui-table-brain": "0.0.1-alpha.350",
    "@types/fontfaceobserver": "2.1.3",
    "@types/marked": "^6.0.0",
    "@types/validator": "13.11.10",
    "ace-builds": "^1.4.14",
    "altcha": "^0.3.1",
    "angular-ng-autocomplete": "^2.0.12",
    "bootstrap": "^5.1.3",
    "class-variance-authority": "^0.6.0",
    "clipboard": "^2.0.11",
    "clsx": "^1.2.1",
    "core-js": "^3.33.3",
    "deepmerge": "^4.3.1",
    "dialog-polyfill": "^0.5.6",
    "file-saver": "^2.0.1",
    "fontfaceobserver": "^2.0.9",
    "handlebars-helpers": "^0.10.0",
    "html2canvas": "^1.4.1",
    "inert-polyfill": "^0.2.5",
    "intl": "1.2.5",
    "jspdf": "^2.5.1",
    "maplibre-gl": "4.3.2",
    "marked": "^11.0.0",
    "popper.js": "^1.15.0",
    "postcss-cssnext": "3.1.1",
    "postcss-prefix-selector": "^1.16.0",
    "rxjs": "^7.8.1",
    "sanitize-html": "^2.11.0",
    "striptags": "^3.1.1",
    "tailwindcss": "^3.4.1",
    "tailwindcss-scoped-preflight": "^3.0.4",
    "tether": "^2.0.0",
    "tiny-sha256": "1.0.2",
    "ts-md5": "^1.3.1",
    "tslib": "^2.0.0",
    "validator": "^13.11.0",
    "zone.js": "~0.14.2"
  },
  "devDependencies": {
    "@angular-builders/dev-server": "^7.3.1",
    "@angular-devkit/build-angular": "^18.0.2",
    "@angular/compiler-cli": "^18.0.1",
    "@angular/language-service": "^18.0.1",
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-angular": "^19.3.0",
    "@spartan-ng/cli": "^0.0.1-alpha.350",
    "@types/core-js": "2.5.8",
    "@types/fabric": "5.3.7",
    "@types/geojson": "7946.0.14",
    "@types/jasmine": "~5.1.4",
    "@types/jasminewd2": "~2.0.3",
    "@types/node": "^20.9.4",
    "@types/source-map": "0.5.7",
    "@types/uglify-js": "3.17.4",
    "@types/webpack": "^5.28.5",
    "autoprefixer": "^10.4.16",
    "caniuse-lite": "^1.0.30000967",
    "codelyzer": "^6.0.0",
    "commitizen": "^4.3.0",
    "cz-conventional-changelog": "^3.3.0",
    "file-loader": "^6.2.0",
    "font-awesome": "^4.7.0",
    "fontmin": "^1.0.1",
    "gh-pages": "^6.1.0",
    "gts": "^5.2.0",
    "html-minifier": "^4.0.0",
    "husky": "^9.0.11",
    "imagemin-cli": "^7.0.0",
    "jasmine-core": "~5.1.1",
    "jasmine-spec-reporter": "~7.0.0",
    "karma": "~6.4.2",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage-istanbul-reporter": "~3.0.2",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "^2.1.0",
    "lint-staged": "^15.2.2",
    "live-server": "^1.2.2",
    "mapbox-gl": "^3.4.0",
    "ngx-markdown-editor": "5.3.4",
    "ngx-translate-testing": "^7.0.0",
    "onchange": "7.1.0",
    "parse5": "^7.1.2",
    "postcss": "^8.4.31",
    "protractor": "~7.0.0",
    "remap-istanbul": "0.13.0",
    "rimraf": "^5.0.5",
    "sass": "^1.49.9",
    "sc5-styleguide": "2.2.0",
    "shelljs": "^0.8.5",
    "tailwind-merge": "^2.2.0",
    "tailwindcss-animate": "^1.0.6",
    "ts-helpers": "1.1.2",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.1",
    "tslint": "~6.1.0",
    "typedoc": "^0.25.3",
    "typescript": "~5.4.5",
    "uglify-js": "^3.5.11",
    "url-loader": "^4.1.1",
    "webpack-cli": "^5.1.4"
  },
  "browserslist": [
    "> 1%",
    "last 2 Chrome version",
    "last 2 Firefox version",
    "last 2 Edge major versions",
    "last 2 Safari major versions",
    "last 2 iOS major versions",
    "Firefox ESR",
    "not IE < 12"
  ],
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "prepare-commit-msg": "exec < /dev/tty && npx cz --hook || true"
    }
  }
}
