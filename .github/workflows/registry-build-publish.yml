name: 🏗️ Build and publish to Github Container Registry

on:
    push:
        branches: [main, release, develop]
        tags: ['v*.*.*']
    pull_request:
        branches:
            - main
            - develop

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    test:
        name: 🧪 Test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.9.0]

        steps:
            - name: ⬇️  Checkout repository
              uses: actions/checkout@v4.2.2
            - name: 🔨 Setup node
              uses: actions/setup-node@master
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Verify npm cache
              run: npm cache verify
            - name: 📲 Install dependencies
              run: |
                  npm install
                  npm clean-install
            - name: 📝 Test
              run: npm run test-headless

    create-release:
        permissions:
            contents: write
        runs-on: ubuntu-latest
        outputs:
            release_id: ${{ steps.create-release.outputs.result }}
        if: startsWith(github.ref, 'refs/tags/')

        steps:
            - name: ⬇️ Checkout repository
              uses: actions/checkout@v4.2.2

            - name: 📋 Create release
              id: create-release
              uses: actions/github-script@v7
              with:
                  script: |
                      const { data } = await github.rest.repos.createRelease({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag_name: `${{ github.ref_name }}`,
                        name: `${{ github.ref_name }}`,
                        generate_release_notes: true,
                        draft: true,
                        prerelease: false
                      })

                      return data.id

    build-and-push-image:
        name: 🏗️ Build and publish
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: ⬇️  Checkout repository
              uses: actions/checkout@v4.2.2
              with:
                  fetch-tags: true
                  fetch-depth: 0

            - name: 🔑 Log in to the Container registry
              uses: docker/login-action@v3.4.0
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: 📋 Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5.6.1
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  flavor: |
                      latest=auto
                      prefix=
                      suffix=

            - name: 🏗️ Build and push Docker image
              if: github.ref != 'refs/heads/develop'
              uses: docker/build-push-action@v5.3.0
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
            - name: 🏗️ Build and push Docker Staging image
              # Only build main images for Staging
              if: github.ref == 'refs/heads/main'
              uses: docker/build-push-action@v5.3.0
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}-Staging
                  labels: ${{ steps.meta.outputs.labels }}-Staging
                  file: staging.Dockerfile
            - name: 🏗️ Build and push Docker develop image
              # Only build develop images for Staging
              if: github.ref == 'refs/heads/develop'
              uses: docker/build-push-action@v5.3.0
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}-Develop
                  labels: ${{ steps.meta.outputs.labels }}-Develop
                  file: develop.Dockerfile

    publish-release:
        permissions:
            contents: write
        runs-on: ubuntu-latest
        needs: [create-release, build-and-push-image]
        if: startsWith(github.ref, 'refs/tags/')

        steps:
            - name: 🚢 Publish release
              uses: actions/github-script@v7
              env:
                  release_id: ${{ needs.create-release.outputs.release_id }}
              with:
                  script: |
                      github.rest.repos.updateRelease({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        release_id: process.env.release_id,
                        draft: false,
                        prerelease: false
                      })
