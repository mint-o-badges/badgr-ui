name: 🏗️ Build and publish to Github Container Registry

on:
    push:
        branches: [main, production, develop]
        tags: ['v*.*.*']
    pull_request:
        branches:
            - main
            - develop
    merge_group:
        branches:
            - production
            - main

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    lint:
        name: 🔍 Formatting & Linting
        runs-on: ubuntu-latest
        steps:
            - name: ⬇️  Checkout repository
              uses: actions/checkout@v5.0.0
            - name: 🔨 Setup node
              uses: actions/setup-node@v6.0.0
              with:
                  node-version-file: '.nvmrc'
            - name: 📲 Install dependencies
              run: npm ci
            - name: Lint
              run: npm run lint
            - name: Prettier
              run: npx prettier --check .

    test:
        name: 🧪 Test
        runs-on: ubuntu-latest
        steps:
            - name: ⬇️  Checkout repository
              uses: actions/checkout@v5.0.0
            - name: 🔨 Setup node
              uses: actions/setup-node@v6.0.0
              with:
                  node-version-file: '.nvmrc'
            - name: 📲 Install dependencies
              run: npm ci
            - name: Run unit tests
              run: npm test -- --no-watch --no-progress --browsers=ChromeHeadless

    build-and-push-image:
        name: 🏗️ Build and publish
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: ⬇️  Checkout repository
              uses: actions/checkout@v5.0.0
              with:
                  fetch-tags: true
                  fetch-depth: 0

            - name: 🔑 Log in to the Container registry
              uses: docker/login-action@v3.6.0
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: 📋 Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5.8.0
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  flavor: |
                      latest=auto
                      prefix=
                      suffix=

            - name: 🏗️ Build and push Docker image
              if: github.ref != 'refs/heads/develop'
              uses: docker/build-push-action@v6.18.0
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
            - name: 🏗️ Build and push Docker Staging image
              # Only build main images for Staging
              if: github.ref == 'refs/heads/main'
              uses: docker/build-push-action@v6.18.0
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}-Staging
                  labels: ${{ steps.meta.outputs.labels }}-Staging
                  file: staging.Dockerfile
            - name: 🏗️ Build and push Docker develop image
              # Only build develop images for Staging
              if: github.ref == 'refs/heads/develop'
              uses: docker/build-push-action@v6.18.0
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}-Develop
                  labels: ${{ steps.meta.outputs.labels }}-Develop
                  file: develop.Dockerfile
